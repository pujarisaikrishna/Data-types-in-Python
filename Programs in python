#addition of numbers
n = 8465
sum = 0

while(n != 0):
    reminder = n % 10
    sum = sum + reminder
    n = n//10

print(sum)

#Reverse of a Number
n = 345
reverse = 0

while (n != 0):
    reminder = n % 10
    reverse = reverse*10 + reminder
    n = n // 10

print(reverse)

#Palindrome

n = 121
temp = n
reverse = 0


while (n != 0):
    reminder = n % 10
    reverse = reverse*10 + reminder
    n = n // 10

if( temp == reverse):
    print("It is a palindrome number")
else:
    print("It is not a palindrome number")

#fiboncci series

n1 = 0
n2 = 1
len = 7
i = 3

print(n1, end=" ")
print(n2, end=" ")

while( i<=len):
    n3 = n1 + n2
    print(n3, end=" ")
    n1 = n2
    n2 = n3
    i = i+1


#type casting or type conversion

n1 = 10
n2 = "10"

n2 = (int(n2))
sum = n1 + n2
print(sum)



# input()


n1 = int(input("enter number -1:"))
n2 = int(input("enter number -2:"))
sum = n1 + n2
print(sum)


# range()

for x in range(1, 11, 1):
    print(x, end=" ")


# range in multiplication

n = int(input("please enter a num for multiplication table"))

for x in range(1,11):
    print(n, 'x',x,'=',n*x)





n = int(input("enter any number"))

sum = 0
for x in range(1,n+1):
    sum = sum + x
print(sum)

#factorial of any given input number

n = int(input("enter any number"))

if(n<1):
    fact = 1
fact = 1
for x in range(1,n+1):
    fact = fact * x
print(fact)

#fibnocci

length = 7

n1 = 0
n2 = 1

print(n1, end=" ")
print(n2, end=" ")

for x in range(1, length+1):
     n3 = n1 + n2
     print(n3, end=" ")
     n1 = n2
     n2 = n3



#prime numbers

n = 7

count = 0
for x in range(1, n+1):

    if n % x ==0:
        count = count + 1

if count == 2:
    print("It is a prime number")
else:
    print("It is not a prime number")


def is_prime(num):
    if num < 2:
        return False
    for i in range(2, int(num ** 0.5) + 1):
        if num % i == 0:
            return False
    return True


# Set the limit here
n = 100
print("Prime numbers up to", n, ":")
for num in range(2, n + 1):
    if is_prime(num):
        print(num, end=" ")


#break and continue

for x in range(1, 11):
    if x==5:
        continue
    print(x, end=" ")




def full_pyramid_pattern(n):
    for x in range(1,  n+1):
        for y in range(n - x):
            print(" ", end=" ")
        for z in range(1, 2 * x):
            print("*", end=" ")
        print()
n = 5
full_pyramid_pattern(n)
